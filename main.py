def is_palindrome(s: str) -> bool:
    # –û—á–∏—â–∞–µ–º —Å—Ç—Ä–æ–∫—É: –æ—Å—Ç–∞–≤–ª—è–µ–º —Ç–æ–ª—å–∫–æ –±—É–∫–≤—ã –∏ —Ü–∏—Ñ—Ä—ã (–ø—Ä–æ–±–µ–ª—ã –∏ –ø—É–Ω–∫—Ç—É–∞—Ü–∏—è –∏–≥–Ω–æ—Ä–∏—Ä—É—é—Ç—Å—è)
    cleaned = ''.join(c for c in s.lower() if c.isalnum())
    left, right = 0, len(cleaned) - 1

    while left < right:
        if cleaned[left] != cleaned[right]:
            return False
        left += 1
        right -= 1

    return True


def main():
    print("üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç—Ä–æ–∫–∏ –Ω–∞ –ø–∞–ª–∏–Ω–¥—Ä–æ–º (–¥–ª—è –≤—ã—Ö–æ–¥–∞ –≤–≤–µ–¥–∏—Ç–µ 'exit' –∏–ª–∏ –Ω–∞–∂–º–∏—Ç–µ Ctrl+C)")

    while True:  # –ë–µ—Å–∫–æ–Ω–µ—á–Ω—ã–π —Ü–∏–∫–ª
        user_input = input("\n–í–≤–µ–¥–∏—Ç–µ —Ñ—Ä–∞–∑—É: ").strip()

        if user_input.lower() in ('exit', '–≤—ã—Ö–æ–¥', ''):  # –£—Å–ª–æ–≤–∏–µ –≤—ã—Ö–æ–¥–∞
            print("üõë –ü—Ä–æ–≥—Ä–∞–º–º–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞.")
            break

        if not user_input:
            print("‚ùå –û—à–∏–±–∫–∞: –ü—É—Å—Ç–∞—è —Å—Ç—Ä–æ–∫–∞! –ü–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞.")
            continue

        if is_palindrome(user_input):
            print("‚úÖ –î–∞, —ç—Ç–æ –ø–∞–ª–∏–Ω–¥—Ä–æ–º!")
        else:
            print("‚ùå –ù–µ—Ç, —ç—Ç–æ –Ω–µ –ø–∞–ª–∏–Ω–¥—Ä–æ–º.")


if __name__ == "__main__":
    main()